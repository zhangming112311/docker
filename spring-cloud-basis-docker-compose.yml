version: '2.1'
services:
  config:
    image: iremember/config:latest
    container_name: config
    ports:
       - "8071:8071"
    environment:
      - ENCRYPT_KEY=${ENCRYPT_KEY} #"IMSYMMETRIC"
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD} #"SPRINGSECURITYUSERPASSWORD"
      - TZ=Asia/Shanghai
    networks:
      backend:
        aliases:
          - "config"

  eureka:
    image: iremember/eureka:latest
    container_name: eureka
    environment:
      - TZ=Asia/Shanghai
      - SPRING_CLOUD_CONFIG_PASSWORD=${SPRING_SECURITY_USER_PASSWORD} #"SPRINGSECURITYUSERPASSWORD"
      
    ports:
       - "8070:8070"
    depends_on:
      config:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka"
  gateway:
    image: iremember/gateway:latest
    container_name: gateway
    ports:
      - "8072:8072"
    environment:
#      PROFILE: "default"
      - SERVER_PORT=8072
      - CONFIGSERVER_URI=http://config:8071
      - EUREKASERVER_URI=http://eureka:8070/eureka/
      - EUREKASERVER_PORT=8070
      - CONFIGSERVER_PORT=8071
      - TZ=Asia/Shanghai
      - SPRING_CLOUD_CONFIG_PASSWORD=${SPRING_SECURITY_USER_PASSWORD} #"SPRINGSECURITYUSERPASSWORD"
    depends_on:
      config:
        condition: service_started
      eureka:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"
  mysql:
    image: mysql:8.0.28-oracle
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=zm474577048
    volumes:
    - /alidata/docker/mysql:/var/lib/mysql
    - ./init-mysql-db:/docker-entrypoint-initdb.d
    ports:
    - 3306:3306
    networks:
      backend:
        aliases:
          - "mysql"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - TZ=Asia/Shanghai
    volumes:
    - ./esdata:/usr/share/elasticsearch/data
    ports:
    - 9300:9300
    - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
#vim /etc/sysctl.conf  加入 vm.max_map_count=262144    
#docker run --name zmes -v /home/esdata:/usr/share/elasticsearch/data -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS="-Xms356m -Xmx356m" -e "discovery.type=single-node" -d  docker.elastic.co/elasticsearch/elasticsearch:7.7.0
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9300
      - TZ=Asia/Shanghai
    ports:
    - 5601:5601
    networks:
      backend:
        aliases:
        - "kibana"
#docker run --name zmkibana -p 5601:5601 -e ELASTICSEARCH_URL=http://zmes:9300 -d docker.elastic.co/kibana/kibana:7.7.0
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    environment: 
      - TZ=Asia/Shanghai
    command:
      logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
    - ./config:/etc/logstash/conf.d
    ports:
    - "5000:5000"
#docker run --name logstash -p 5000:5000 -e ELASTICSEARCH_URL=http://zmes:9300 -e JVM_OPTIONS="-Xms356m -Xmx356m" -d docker.elastic.co/logstash/logstash:7.7.0

#    NOTE If you see an error 137 exit code with  <container_name> container on
#your console while executing the  docker-compose command, visit the follow-
#ing link to increase the memory for Docker: https://www.petefreitag.com/
#item/848.cfm 
  zipkin: 
    image: openzipkin/zipkin 
    container_name: zipkin
    depends_on: 
      - elasticsearch
    environment: 
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9200"
      - TZ=Asia/Shanghai
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"
networks:
  backend:
    driver: bridge
    

    
# docker pull mysql:8.0.28-oracle
# docker run --name zmmysql -v /存储目录:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=zm474577048 -d mysql:8.0.28-oracle 
# docker exec -it a773e5260704 /bin/bash
#create user 'zhangming' identified with mysql_native_password by 'zm@474577048';
#grant all privileges on *.* to 'zhangming';
#flush privileges;
#connect to local MySQL server through socket  /var/lib/mysql/mysql.sock     mysql -h 127.0.0.1 -P 3306 -u root -p

#mvn clean package dockerfile:build && docker-compose -f docker/docker-compose.yml up
